{"ast":null,"code":"import _classCallCheck from \"/Users/alvaro/Desktop/REACT - UDEMY/lights-out/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alvaro/Desktop/REACT - UDEMY/lights-out/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alvaro/Desktop/REACT - UDEMY/lights-out/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alvaro/Desktop/REACT - UDEMY/lights-out/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alvaro/Desktop/REACT - UDEMY/lights-out/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/alvaro/Desktop/REACT - UDEMY/lights-out/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/alvaro/Desktop/REACT - UDEMY/lights-out/src/Cell.js\";\nimport React, { Component } from 'react';\nimport \"./Cell.css\";\n/** A single cell on the board.\n *\n * This has no state --- just two props:\n *\n * - flipCellsAroundMe: a function rec'd from the board which flips this\n *      cell and the cells around of it\n *\n * - isLit: boolean, is this cell lit?\n *\n * This handles clicks --- by calling flipCellsAroundMe\n *\n **/\n\nvar Cell = /*#__PURE__*/function (_Component) {\n  _inherits(Cell, _Component);\n\n  function Cell(props) {\n    var _this;\n\n    _classCallCheck(this, Cell);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cell).call(this, props));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Cell, [{\n    key: \"handleClick\",\n    value: function handleClick(evt) {\n      // call up to the board to flip cells around this cell\n      console.log(evt.target);\n      this.props.flipCellsAroundMe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = \"Cell\" + (this.props.isLit ? \" Cell-lit\" : \"\");\n      return /*#__PURE__*/React.createElement(\"td\", {\n        className: classes,\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n\n  return Cell;\n}(Component);\n\nexport default Cell;","map":{"version":3,"sources":["/Users/alvaro/Desktop/REACT - UDEMY/lights-out/src/Cell.js"],"names":["React","Component","Cell","props","handleClick","bind","evt","console","log","target","flipCellsAroundMe","classes","isLit"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;AAGA;;;;;;;;;;;;;IAaMC,I;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AAFiB;AAGlB;;;;gCAEWC,G,EAAK;AACf;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAhB;AACA,WAAKN,KAAL,CAAWO,iBAAX;AACD;;;6BAEQ;AACP,UAAIC,OAAO,GAAG,UAAU,KAAKR,KAAL,CAAWS,KAAX,GAAmB,WAAnB,GAAiC,EAA3C,CAAd;AAEA,0BACI;AAAI,QAAA,SAAS,EAAED,OAAf;AAAwB,QAAA,OAAO,EAAE,KAAKP,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGD;;;;EAnBgBH,S;;AAuBnB,eAAeC,IAAf","sourcesContent":["import React, {Component} from 'react'\nimport \"./Cell.css\"\n\n\n/** A single cell on the board.\n *\n * This has no state --- just two props:\n *\n * - flipCellsAroundMe: a function rec'd from the board which flips this\n *      cell and the cells around of it\n *\n * - isLit: boolean, is this cell lit?\n *\n * This handles clicks --- by calling flipCellsAroundMe\n *\n **/\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(evt) {\n    // call up to the board to flip cells around this cell\n\n    console.log(evt.target)\n    this.props.flipCellsAroundMe();\n  }\n\n  render() {\n    let classes = \"Cell\" + (this.props.isLit ? \" Cell-lit\" : \"\");\n\n    return (\n        <td className={classes} onClick={this.handleClick} />\n    )\n  }\n}\n\n\nexport default Cell"]},"metadata":{},"sourceType":"module"}